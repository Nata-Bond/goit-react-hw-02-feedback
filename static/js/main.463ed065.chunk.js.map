{"version":3,"sources":["components/section/Section.js","components/feedback-options/FeedbackOptions.js","components/statistics/Notification.js","components/statistics/Statistics.js","data/feedbackData.js","components/App.js","index.js"],"names":["Section","title","children","FeedbackOptions","onLeaveFeedback","options","map","item","type","onClick","uuidv4","Notification","message","Statistics","good","neutral","bad","total","positiveFeedback","feedbackData","App","state","addValue","mark","setState","prevState","countTotalFeedback","Object","values","reduce","countPositiveFeedbackPercentage","Math","round","this","totalFeedback","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAWeA,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACE,6BAAKD,IACJC,M,QCyBQC,EA5BS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,QAC1C,OACE,8BAWGA,EAAQC,KAAI,SAACC,GACZ,OACE,wBAEEC,KAAK,SACLC,QAAS,kBAAML,EAAgBG,IAHjC,SAKGA,GAJIG,qBCbFC,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCiBEC,EAjBI,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,iBAC/C,OACE,qCACGD,EAAQ,GACP,+BACE,wCAAWH,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,UAGO,IAAVD,GAAe,cAAC,EAAD,CAAcL,QAAQ,0BCf/BO,EAAe,CAAC,OAAQ,UAAW,OCM3BC,E,4MACnBC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,SAAW,SAACC,GACV,EAAKC,UAAS,SAACC,GACb,OAAO,eACJF,EAAOE,EAAUF,GAAQ,O,EAKhCG,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKP,OAAOQ,QAAO,SAACZ,EAAOV,GAAR,OAAiBU,EAAQV,IAAM,I,EAGzEuB,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKX,MAAMP,KAAO,EAAKY,qBAAwB,MAAQ,G,uDAGlE,IAAD,EACwBO,KAAKZ,MAA5BP,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBkB,EAAgBD,KAAKP,qBACrBR,EAAmBe,KAAKH,kCAE9B,OACE,qCACE,cAAC,EAAD,aAAS7B,MAAO,wBAAyBC,UAAQ,GAAjD,WACE,cAAC,EAAD,CACEG,QAASc,EACTf,gBAAiB6B,KAAKX,aAG1B,cAAC,EAAD,aAASrB,MAAO,aAAcC,UAAQ,GAAtC,WACE,cAAC,EAAD,CACEY,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOiB,EACPhB,iBAAkBA,a,GA1CGiB,aCDjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.463ed065.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <div>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n};\n\nexport default Section;\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst FeedbackOptions = ({ onLeaveFeedback, options }) => {\n  return (\n    <div>\n      {/* <button type=\"button\" onClick={() => onLeaveFeedback(\"good\")}>\n        Good\n      </button>\n      <button type=\"button\" onClick={() => onLeaveFeedback(\"neutral\")}>\n        Neutral\n      </button>\n      <button type=\"button\" onClick={() => onLeaveFeedback(\"bad\")}>\n        Bad\n      </button> */}\n\n      {options.map((item) => {\n        return (\n          <button\n            key={uuidv4()}\n            type=\"button\"\n            onClick={() => onLeaveFeedback(item)}\n          >\n            {item}\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nexport default Notification;\n","import React from \"react\";\nimport Notification from \"./Notification\";\n\nconst Statistics = ({ good, neutral, bad, total, positiveFeedback }) => {\n  return (\n    <>\n      {total > 0 && (\n        <ul>\n          <li>Good: {good}</li>\n          <li>Neutral: {neutral}</li>\n          <li>Bad: {bad}</li>\n          <li>Total: {total}</li>\n          <li>Positive feedback: {positiveFeedback}%</li>\n        </ul>\n      )}\n      {total === 0 && <Notification message=\"No feedback given\" />}\n    </>\n  );\n};\n\nexport default Statistics;\n","export const feedbackData = [\"good\", \"neutral\", \"bad\"];\n","import React, { Component } from \"react\";\nimport Section from \"./section/Section\";\nimport FeedbackOptions from \"./feedback-options/FeedbackOptions\";\nimport Statistics from \"./statistics/Statistics\";\nimport { feedbackData } from \"../data/feedbackData\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addValue = (mark) => {\n    this.setState((prevState) => {\n      return {\n        [mark]: prevState[mark] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((total, item) => total + item, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100) || 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const positiveFeedback = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <Section title={\"Please leave feedback\"} children>\n          <FeedbackOptions\n            options={feedbackData}\n            onLeaveFeedback={this.addValue}\n          />\n        </Section>\n        <Section title={\"Statistics\"} children>\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalFeedback}\n            positiveFeedback={positiveFeedback}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}